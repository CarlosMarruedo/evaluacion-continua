const { convertRgbaToHsla } = require('../src/js/util.js');

describe('convertRgbaToHsla', () => {
  test('returns correct hsla value for rgba(0, 0, 0, 1)', () => {
    const result = convertRgbaToHsla(0, 0, 0, 1);
    expect(result).toEqual({ hue: 0, saturation: 0, lightness: 0, alpha: 1 });
  });

  test('returns correct hsla value for rgba(255, 255, 255, 1)', () => {
    const result = convertRgbaToHsla(255, 255, 255, 1);
    expect(result).toEqual({ hue: 0, saturation: 0, lightness: 100, alpha: 1 });
  });

  test('returns correct hsla value for rgba(255, 0, 255, 1)', () => {
    const result = convertRgbaToHsla(255, 0, 255, 1);
    expect(result).toEqual({ hue: 300, saturation: 100, lightness: 50, alpha: 1 });
  });

  test('returns correct hsla value for rgba(0, 255, 255, 1)', () => {
    const result = convertRgbaToHsla(0, 255, 255, 1);
    expect(result).toEqual({ hue: 180, saturation: 100, lightness: 50, alpha: 1 });
  });

  test('returns correct hsla value for rgba(255, 255, 0, 1)', () => {
    const result = convertRgbaToHsla(255, 255, 0, 1);
    expect(result).toEqual({ hue: 60, saturation: 100, lightness: 50, alpha: 1 });
  });

  test('returns correct hsla value for rgba(116, 178, 195, 1)', () => {
    const result = convertRgbaToHsla(116, 178, 195, 1);
    expect(result).toEqual({ hue: 193, saturation: 40, lightness: 61, alpha: 1 });
  });
});
